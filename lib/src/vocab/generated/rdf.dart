// Copyright (c) 2025, Klas Kala√ü <habbatical@gmail.com>
// All rights reserved. Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by VocabularyBuilder

import 'package:rdf_core/src/graph/rdf_term.dart';

/// Rdf Vocabulary
///
/// Provides constants for the RDF vocabulary
/// (http://www.w3.org/1999/02/22-rdf-syntax-ns#).
///
/// Example usage:
/// ```dart
/// import 'package:rdf_core/vocab.dart';
/// final property = RdfPredicates.type;
/// final type = RdfTypes.Property;
/// ```
///
/// All constants are pre-constructed as IriTerm objects to enable direct use in
/// constructing RDF graphs without repeated string concatenation or term creation.
///
/// [Vocabulary Reference](http://www.w3.org/1999/02/22-rdf-syntax-ns#)
library rdf_vocab;

/// Base Rdf namespace and utility functions
@deprecated
class Rdf {
  // coverage:ignore-start
  const Rdf._();
  // coverage:ignore-end

  /// Base IRI for Rdf vocabulary
  /// [Spec](http://www.w3.org/1999/02/22-rdf-syntax-ns#)
  static const String namespace = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';
  static const String prefix = 'rdf';

  /// IRI for rdf:Property
  ///
  /// The class of RDF properties.
  ///
  static const Property = IriTerm.prevalidated('${Rdf.namespace}Property');

  /// IRI for rdf:Statement
  ///
  /// The class of RDF statements.
  ///
  static const Statement = IriTerm.prevalidated('${Rdf.namespace}Statement');

  /// IRI for rdf:Bag
  ///
  /// The class of unordered containers.
  ///
  static const Bag = IriTerm.prevalidated('${Rdf.namespace}Bag');

  /// IRI for rdf:Seq
  ///
  /// The class of ordered containers.
  ///
  static const Seq = IriTerm.prevalidated('${Rdf.namespace}Seq');

  /// IRI for rdf:Alt
  ///
  /// The class of containers of alternatives.
  ///
  static const Alt = IriTerm.prevalidated('${Rdf.namespace}Alt');

  /// IRI for rdf:List
  ///
  /// The class of RDF Lists.
  ///
  static const List = IriTerm.prevalidated('${Rdf.namespace}List');

  /// IRI for rdf:CompoundLiteral
  ///
  /// A class representing a compound literal.
  ///
  static const CompoundLiteral = IriTerm.prevalidated('${Rdf.namespace}CompoundLiteral');

  /// IRI for rdf:HTML
  ///
  /// The datatype of RDF literals storing fragments of HTML content
  ///
  static const HTML = IriTerm.prevalidated('${Rdf.namespace}HTML');

  /// IRI for rdf:langString
  ///
  /// The datatype of language-tagged string values
  ///
  static const langString = IriTerm.prevalidated('${Rdf.namespace}langString');

  /// IRI for rdf:PlainLiteral
  ///
  /// The class of plain (i.e. untyped) literal values, as used in RIF and OWL 2
  ///
  static const PlainLiteral = IriTerm.prevalidated('${Rdf.namespace}PlainLiteral');

  /// IRI for rdf:XMLLiteral
  ///
  /// The datatype of XML literal values.
  ///
  static const XMLLiteral = IriTerm.prevalidated('${Rdf.namespace}XMLLiteral');

  /// IRI for rdf:JSON
  ///
  /// The datatype of RDF literals storing JSON content.
  ///
  static const JSON = IriTerm.prevalidated('${Rdf.namespace}JSON');

  /// IRI for rdf:22-rdf-syntax-ns#
  ///
  static const n22-rdf-syntax-ns# = IriTerm.prevalidated('${Rdf.namespace}22-rdf-syntax-ns#');

  /// IRI for rdf:nil
  ///
  /// The empty list, with no items in it. If the rest of a list is nil then the list has no more items in it.
  ///
  static const nil = IriTerm.prevalidated('${Rdf.namespace}nil');

  /// IRI for rdf:type
  ///
  /// The subject is an instance of a class.
  ///
  /// Domain: http://www.w3.org/2000/01/rdf-schema#Resource
  /// Range: http://www.w3.org/2000/01/rdf-schema#Class
  ///
  static const type = IriTerm.prevalidated('${Rdf.namespace}type');

  /// IRI for rdf:subject
  ///
  /// The subject of the subject RDF statement.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement
  /// Range: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const subject = IriTerm.prevalidated('${Rdf.namespace}subject');

  /// IRI for rdf:predicate
  ///
  /// The predicate of the subject RDF statement.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement
  /// Range: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const predicate = IriTerm.prevalidated('${Rdf.namespace}predicate');

  /// IRI for rdf:object
  ///
  /// The object of the subject RDF statement.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement
  /// Range: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const object = IriTerm.prevalidated('${Rdf.namespace}object');

  /// IRI for rdf:value
  ///
  /// Idiomatic property used for structured values.
  ///
  /// Domain: http://www.w3.org/2000/01/rdf-schema#Resource
  /// Range: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const value = IriTerm.prevalidated('${Rdf.namespace}value');

  /// IRI for rdf:first
  ///
  /// The first item in the subject RDF list.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#List
  /// Range: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const first = IriTerm.prevalidated('${Rdf.namespace}first');

  /// IRI for rdf:rest
  ///
  /// The rest of the subject RDF list after the first item.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#List
  /// Range: http://www.w3.org/1999/02/22-rdf-syntax-ns#List
  ///
  static const rest = IriTerm.prevalidated('${Rdf.namespace}rest');

  /// IRI for rdf:language
  ///
  /// The language component of a CompoundLiteral.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#CompoundLiteral
  ///
  static const language = IriTerm.prevalidated('${Rdf.namespace}language');

  /// IRI for rdf:direction
  ///
  /// The base direction component of a CompoundLiteral.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#CompoundLiteral
  ///
  static const direction = IriTerm.prevalidated('${Rdf.namespace}direction');

}

/// Rdf type/class constants.
///
/// Contains IRIs that represent classes or types defined in the Rdf vocabulary.
@deprecated
class RdfTypes {
  // coverage:ignore-start
  const RdfTypes._();
  // coverage:ignore-end

  /// IRI for rdf:Property
  ///
  /// The class of RDF properties.
  ///
  static const Property = IriTerm.prevalidated('${Rdf.namespace}Property');

  /// IRI for rdf:Statement
  ///
  /// The class of RDF statements.
  ///
  static const Statement = IriTerm.prevalidated('${Rdf.namespace}Statement');

  /// IRI for rdf:Bag
  ///
  /// The class of unordered containers.
  ///
  static const Bag = IriTerm.prevalidated('${Rdf.namespace}Bag');

  /// IRI for rdf:Seq
  ///
  /// The class of ordered containers.
  ///
  static const Seq = IriTerm.prevalidated('${Rdf.namespace}Seq');

  /// IRI for rdf:Alt
  ///
  /// The class of containers of alternatives.
  ///
  static const Alt = IriTerm.prevalidated('${Rdf.namespace}Alt');

  /// IRI for rdf:List
  ///
  /// The class of RDF Lists.
  ///
  static const List = IriTerm.prevalidated('${Rdf.namespace}List');

  /// IRI for rdf:CompoundLiteral
  ///
  /// A class representing a compound literal.
  ///
  static const CompoundLiteral = IriTerm.prevalidated('${Rdf.namespace}CompoundLiteral');

  /// IRI for rdf:HTML
  ///
  /// The datatype of RDF literals storing fragments of HTML content
  ///
  static const HTML = IriTerm.prevalidated('${Rdf.namespace}HTML');

  /// IRI for rdf:langString
  ///
  /// The datatype of language-tagged string values
  ///
  static const langString = IriTerm.prevalidated('${Rdf.namespace}langString');

  /// IRI for rdf:PlainLiteral
  ///
  /// The class of plain (i.e. untyped) literal values, as used in RIF and OWL 2
  ///
  static const PlainLiteral = IriTerm.prevalidated('${Rdf.namespace}PlainLiteral');

  /// IRI for rdf:XMLLiteral
  ///
  /// The datatype of XML literal values.
  ///
  static const XMLLiteral = IriTerm.prevalidated('${Rdf.namespace}XMLLiteral');

  /// IRI for rdf:JSON
  ///
  /// The datatype of RDF literals storing JSON content.
  ///
  static const JSON = IriTerm.prevalidated('${Rdf.namespace}JSON');

}

/// Rdf predicate constants.
///
/// Contains IRIs for properties defined in the Rdf vocabulary.
@deprecated
class RdfPredicates {
  // coverage:ignore-start
  const RdfPredicates._();
  // coverage:ignore-end

  /// IRI for rdf:type
  ///
  /// The subject is an instance of a class.
  ///
  /// Domain: http://www.w3.org/2000/01/rdf-schema#Resource
  /// Range: http://www.w3.org/2000/01/rdf-schema#Class
  ///
  static const type = IriTerm.prevalidated('${Rdf.namespace}type');

  /// IRI for rdf:subject
  ///
  /// The subject of the subject RDF statement.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement
  /// Range: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const subject = IriTerm.prevalidated('${Rdf.namespace}subject');

  /// IRI for rdf:predicate
  ///
  /// The predicate of the subject RDF statement.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement
  /// Range: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const predicate = IriTerm.prevalidated('${Rdf.namespace}predicate');

  /// IRI for rdf:object
  ///
  /// The object of the subject RDF statement.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement
  /// Range: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const object = IriTerm.prevalidated('${Rdf.namespace}object');

  /// IRI for rdf:value
  ///
  /// Idiomatic property used for structured values.
  ///
  /// Domain: http://www.w3.org/2000/01/rdf-schema#Resource
  /// Range: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const value = IriTerm.prevalidated('${Rdf.namespace}value');

  /// IRI for rdf:first
  ///
  /// The first item in the subject RDF list.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#List
  /// Range: http://www.w3.org/2000/01/rdf-schema#Resource
  ///
  static const first = IriTerm.prevalidated('${Rdf.namespace}first');

  /// IRI for rdf:rest
  ///
  /// The rest of the subject RDF list after the first item.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#List
  /// Range: http://www.w3.org/1999/02/22-rdf-syntax-ns#List
  ///
  static const rest = IriTerm.prevalidated('${Rdf.namespace}rest');

  /// IRI for rdf:language
  ///
  /// The language component of a CompoundLiteral.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#CompoundLiteral
  ///
  static const language = IriTerm.prevalidated('${Rdf.namespace}language');

  /// IRI for rdf:direction
  ///
  /// The base direction component of a CompoundLiteral.
  ///
  /// Domain: http://www.w3.org/1999/02/22-rdf-syntax-ns#CompoundLiteral
  ///
  static const direction = IriTerm.prevalidated('${Rdf.namespace}direction');

}

