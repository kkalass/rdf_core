/* Minified highlight.js for Dart syntax highlighting */
!function(e){"use strict";var n={exports:{}};function t(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}
!function(e){var r="[a-zA-Z_$][a-zA-Z0-9_$]*",a="[0-9]+",i="[0-9]+\.[0-9]*([eE][-+]?[0-9]+)?",o="0[xX][0-9a-fA-F]+",s="0[bB][01]+",l="0[oO][0-7]+",c="(\\.|[^"\\])*",u="(\\.|[^'\\])*";e.languages.dart={name:"Dart",keywords:{keyword:"abstract as assert async await break case catch class const continue covariant default deferred do dynamic else enum export extends extension external factory false final finally for Function get hide if implements import in inferface is late library mixin new null on operator part required rethrow return set show static super switch sync this throw true try typedef var void while with yield",built_in:"int double num bool String List Map Set dynamic void Object",literal:"true false null"},contains:[{className:"meta",begin:"@",end:"(?=\n|\s)",relevance:2},{className:"string",begin:'"',end:'"',contains:[e.BACKSLASH_ESCAPE]}, {className:"string",begin:"'",end:"'",contains:[e.BACKSLASH_ESCAPE]}, {className:"number",variants:[{begin:i},{begin:a},{begin:o},{begin:s},{begin:l}],relevance:0},{className:"comment",begin:"//",end:"$"},{className:"comment",begin:"/\*",end:"\*/"},{className:"class",beginKeywords:"class interface",end:/\{/,excludeEnd:!0,illegal:/[\n:]/,contains:[{beginKeywords:"extends implements"},e.UNDERSCORE_TITLE_MODE]},{className:"function",beginKeywords:"function",end:/\(/,excludeEnd:!0,contains:[e.UNDERSCORE_TITLE_MODE]},{className:"annotation",begin:"@",end:"(?=\n|\s)",relevance:2}]};}(n.exports);var r=n.exports;hljs.registerLanguage("dart",r.languages.dart);}();
